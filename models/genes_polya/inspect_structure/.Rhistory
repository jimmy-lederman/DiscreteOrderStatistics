df <- read.csv("/Users/jimmy/Desktop/OrderStats/data/cancer.csv")
# Original vector
strings <- c("abcBRCAxyz", "helloCESCworld", "ESCAexample", "UCEC123", "randomUCStext", "UVMpresent")
# Substrings to match and replace
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding and replacing substrings
new_vector <- sapply(strings, function(x) {
matched <- substrings[grepl(paste(substrings, collapse = "|"), x)]
if (length(matched) > 0) return(matched) else return(NA) # NA if no match
})
# Original vector
strings <- c("abcBRCAxyz", "helloCESCworld", "ESCAexample", "UCEC123", "randomUCStext", "UVMpresent")
# Substrings to match and replace
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding and replacing substrings
new_vector <- sapply(strings, function(x) {
matched <- substrings[grepl(paste(substrings, collapse = "|"), x)]
if (length(matched) > 0) return(matched) else return(NA) # NA if no match
})
new_vector
# Original vector
strings <- c("abcBRCAxyz", "helloCESCworld", "ESCAexample", "UCEC123", "randomUCStext", "UVMpresent")
# Substrings to match and replace
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding and replacing substrings
new_vector <- sapply(strings, function(x) {
matched <- substrings[grepl(paste(substrings, collapse = "|"), x)]
if (length(matched) > 0) return(matched) else return(NA) # NA if no match
})
strings
strings <- c("abcBRCAxyz", "helloCESCworld", "ESCAexample", "UCEC123", "randomUCStext", "UVMpresent")
# Substrings to match and replace
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding and replacing substrings
new_vector <- vapply(strings, function(x) {
matched <- substrings[grepl(paste(substrings, collapse = "|"), x)]
if (length(matched) > 0) matched else NA_character_  # Ensure proper length
}, character(1))  # Specify output is a single string
# Original vector
strings <- c("abcBRCAxyz", "helloCESCworld", "ESCAexample", "UCEC123", "randomUCStext", "UVMpresent")
# Substrings to match
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding the first matching substring
new_vector <- vapply(strings, function(x) {
match <- substrings[sapply(substrings, function(sub) grepl(sub, x))]
if (length(match) > 0) match[1] else NA_character_  # Take the first match or NA
}, character(1))
# Print the new vector
print(new_vector)
# Original vector
strings <- df$project_id.sample_id
# Substrings to match
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding the first matching substring
new_vector <- vapply(strings, function(x) {
match <- substrings[sapply(substrings, function(sub) grepl(sub, x))]
if (length(match) > 0) match[1] else NA_character_  # Take the first match or NA
}, character(1))
# Print the new vector
print(new_vector)
# Original vector
strings <- df$project_id.sample_id
# Substrings to match
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding the first matching substring
new_vector <- vapply(strings, function(x) {
match <- substrings[sapply(substrings, function(sub) grepl(sub, x))]
if (length(match) > 0) match[1] else NA_character_  # Take the first match or NA
}, character(1))
# Print the new vector
print(as.vector(new_vector))
# Original vector
strings <- df$project_id.sample_id
# Substrings to match
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding the first matching substring
new_vector <- vapply(strings, function(x) {
match <- substrings[sapply(substrings, function(sub) grepl(sub, x))]
if (length(match) > 0) match[1] else NA_character_  # Take the first match or NA
}, character(1))
# Print the new vector
labels <- as.vector(new_vector)
# Original vector
strings <- df$project_id.sample_id
# Substrings to match
substrings <- c("BRCA", "CESC", "ESCA", "UCEC", "UCS", "UVM")
# Create the new vector by finding the first matching substring
new_vector <- vapply(strings, function(x) {
match <- substrings[sapply(substrings, function(sub) grepl(sub, x))]
if (length(match) > 0) match[1] else NA_character_  # Take the first match or NA
}, character(1))
# Print the new vector
labels <- as.vector(new_vector)
df$project_id.sample_id <- NULL
View(df)
results <- prcomp(df, scale = TRUE)
dfnew <- df[ , which(apply(df, 2, var) != 0)]
results <- prcomp(df, scale = TRUE)
dfnew <- df[ , which(apply(df, 2, var) != 0)]
results <- prcomp(dfnew, scale = TRUE)
results
results$rotation <- -1*results$rotation
results$rotation
dfnew <- df[ , which(apply(df, 2, var) != 0)]
results <- prcomp(t(dfnew), scale = TRUE)
results$rotation <- -1*results$rotation
results$rotation
results$rotation[,1]
results$rotation[,1000]
results$rotation[,309]
results$rotation[,310]
results$rotation[1,]
results$rotation[,1]
firstcomp <- results$rotation[,1]
seconcomp <- results$rotation[,2]
plot(firstcomp, seconcomp)
plot(firstcomp, seconcomp, color=label)
plot(firstcomp, seconcomp, color=labels)
plot(firstcomp, seconcomp, col=labels)
ggplot(aes(x = firstcomp, y = secondcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of Firstcomp vs Secondcomp",
x = "First Component",
y = "Second Component",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
ggplot2(aes(x = firstcomp, y = secondcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of Firstcomp vs Secondcomp",
x = "First Component",
y = "Second Component",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
ggplot(aes(x = firstcomp, y = secondcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of Firstcomp vs Secondcomp",
x = "First Component",
y = "Second Component",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
data <- data.fram(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = secondcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of Firstcomp vs Secondcomp",
x = "First Component",
y = "Second Component",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of Firstcomp vs Secondcomp",
x = "First Component",
y = "Second Component",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "First Component",
y = "Second Component",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "PC1",
y = "PC2",
color = "Labels"
) +
theme_minimal()
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "PC1",
y = "PC2",
color = "Cancer Types"
) +
theme_minimal()
firstcomp <- results$rotation[,1]
seconcomp <- results$rotation[,3]
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "PC1",
y = "PC2",
color = "Cancer Types"
) +
theme_minimal()
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "PC1",
y = "PC2",
color = "Cancer Types"
) +
theme_minimal()
firstcomp <- results$rotation[,1]
seconcomp <- results$rotation[,4]
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "PC1",
y = "PC2",
color = "Cancer Types"
) +
theme_minimal()
firstcomp <- results$rotation[,1]
seconcomp <- results$rotation[,2]
library(ggplot2)
data <- data.frame(firstcomp=firstcomp,seconcomp=seconcomp,labels=labels)
ggplot(data, aes(x = firstcomp, y = seconcomp, color = labels)) +
geom_point(size = 3) +   # Scatter points with size
labs(
title = "Scatterplot of PC1 vs PC2",
x = "PC1",
y = "PC2",
color = "Cancer Types"
) +
theme_minimal()
