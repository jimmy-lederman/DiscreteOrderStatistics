#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
#fano factor plot
muvec <- seq(1,50,by=.1)
dvec <- c(1, 2,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df <- data.frame(fano_mat)
colnames(df) <- as.character(dvec)
df <- df %>% pivot_longer(cols = colnames(df), names_to = "D")
df$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
muvec_other <- c()
for(mu in muvec){
muvec_other <- c(muvec_other, rep(mu,length(dvec)))
}
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") #+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
#fano factor plot
muvec <- seq(1,10,by=.1)
dvec <- c(1, 2,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df <- data.frame(fano_mat)
colnames(df) <- as.character(dvec)
df <- df %>% pivot_longer(cols = colnames(df), names_to = "D")
df$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
muvec_other <- c()
for(mu in muvec){
muvec_other <- c(muvec_other, rep(mu,length(dvec)))
}
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") #+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
#fano factor plot
muvec <- seq(.01,1,by=.01)
dvec <- c(1, 2,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df <- data.frame(fano_mat)
colnames(df) <- as.character(dvec)
df <- df %>% pivot_longer(cols = colnames(df), names_to = "D")
df$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
muvec_other <- c()
for(mu in muvec){
muvec_other <- c(muvec_other, rep(mu,length(dvec)))
}
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") #+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
#fano factor plot
muvec <- seq(1,100,by=.5)
dvec <- c(1, 2,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df <- data.frame(fano_mat)
colnames(df) <- as.character(dvec)
df <- df %>% pivot_longer(cols = colnames(df), names_to = "D")
df$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
muvec_other <- c()
for(mu in muvec){
muvec_other <- c(muvec_other, rep(mu,length(dvec)))
}
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") #+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") + theme_bw(())#+
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") + theme_bw()#+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "black") + theme_bw()#+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
#fano factor plot
muvec <- seq(1,50,by=1)
dvec <- c(2,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
m_D <- sort(m_d, decreasing = TRUE)
Z <- m_D[2]
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
#fano factor plot
muvec <- seq(1,50,by=1)
dvec <- c(2,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
m_D <- sort(m_D, decreasing = TRUE)
Z <- m_D[2]
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df <- data.frame(fano_mat)
colnames(df) <- as.character(dvec)
df <- df %>% pivot_longer(cols = colnames(df), names_to = "D")
df$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
muvec_other <- c()
for(mu in muvec){
muvec_other <- c(muvec_other, rep(mu,length(dvec)))
}
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "red") #+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
getwd()
df <- read.csv("/Users/jimmylederman/Downloads/SeoulBikeData.csv")
df <- read.csv2("/Users/jimmylederman/Downloads/SeoulBikeData.csv")
df <- read_csv2("/Users/jimmylederman/Downloads/SeoulBikeData.csv")
df <- read.csv("/Users/jimmylederman/Downloads/SeoulBikeData.csv")
df <- read.csv("/Users/jimmylederman/Downloads/SeoulBikeData.csv", check.names = FALSE)
df
plot(df$`Rented Bike Count`, df$hour)
plot(df$`Rented Bike Count`, df$temperature)
plot(df$`Rented Bike Count`, df$temperature)
df
df <- read.csv("/Users/jimmylederman/Downloads/SeoulBikeData.csv")
df
plot(df$`Rented Bike Count`, df$temperature)
plot(df$bikecount, df$temperature)
plot(df$bikecount, df$temperature, pch = 20)
plot(df$bikecount, df$rainfall, pch = 20)
plot(df$bikecount, df$temperature, pch = 20)
plot(df$temperature, df$bikecount, pch = 20)
plot(df$humidity, df$bikecount, pch = 20)
plot(df$windspeed, df$bikecount, pch = 20)
plot(df$dewpointtemp, df$bikecount, pch = 20)
plot(df$hour, df$bikecount, pch = 20)
plot(df$season, df$bikecount, pch = 20)
df
unique(df$season)
df <- df[df$season == "Summer",]
plot(df$hour, df$bikecount, pch = 20)
#fano factor plot
muvec <- seq(1,100,by=.5)
dvec <- c(1,2,3,4,5,10,20,50,100)
B <- 100000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df <- data.frame(fano_mat)
colnames(df) <- as.character(dvec)
df <- df %>% pivot_longer(cols = colnames(df), names_to = "D")
df$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
muvec_other <- c()
for(mu in muvec){
muvec_other <- c(muvec_other, rep(mu,length(dvec)))
}
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = "mu") +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "black") + theme_bw()#+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
library(tidyverse)
ggplot() +
geom_point(data = df, aes(x = muvec_other, y = value, color = D)) +
labs(y = "Fano Factor", x = expression(mu)) +
geom_hline(yintercept = (pi-1)/pi,
linetype = "dashed", color = "black") + theme_bw()#+
# geom_hline(yintercept = var(rmaxnorm(100000,5,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,10,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,20,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,50,mean=0,sd=1)),
#            linetype = "dashed", color = "red") +
# geom_hline(yintercept = var(rmaxnorm(100000,100,mean=0,sd=1)),
#            linetype = "dashed", color = "red")
#fano factor plot
muvec <- seq(.01,2,by=.01)
dvec <- c(1, 2,3,4,5,10,20,50,100)
B <- 100000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
#fano factor plot
muvec <- seq(.01,2,by=.01)
dvec <- c(1, 2,3,4,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df2 <- data.frame(fano_mat)
colnames(df2) <- as.character(dvec)
df2 <- df2 %>% pivot_longer(cols = colnames(df), names_to = "D")
#fano factor plot
muvec <- seq(.01,2,by=.01)
dvec <- c(1, 2,3,4,5,10,20,50,100)
B <- 10000
mean_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
variances_mat <- matrix(0,nrow = length(muvec),ncol=length(dvec))
for(i in 1:length(muvec)){
mu <- muvec[i]
for(j in 1:length(dvec)){
d <- dvec[j]
Z_B <- c()
Y_B <- c()
for(k in 1:B){
m_D <- rpois(d, mu)
Z <- max(m_D)
Z_B <- c(Z_B, Z)
}
mean_mat[i,j] <- mean(Z_B)
variances_mat[i,j] <- var(Z_B)
}
}
library(tidyverse)
fano_mat <- variances_mat/mean_mat
df2 <- data.frame(fano_mat)
colnames(df2) <- as.character(dvec)
df2 <- df2 %>% pivot_longer(cols = colnames(df2), names_to = "D")
df2$D <- factor(df$D, levels = as.character(dvec))#,"5", "10","20","50","100","1000"
(.2)^{-.5}
(1)^{-.5}
(2)^{-.5}
(3)^{-.5}
(10)^{-.5}
2(10)^{-.5}
2*(10)^{-.5}
(10)^{-.5}
(100)^{-.5}
set.seed(444)
rbinom(1,80000,.5)
df
getwd()
save(df,file="/Users/jimmylederman/Desktop/PoissonMax/theoryworkbooks/Rda")
shape <- .8*1000
rate <- 1000
x <- seq(.01,5,.01)
y <- dgamma(x, shape = shape, rate = rate)
plot(x,y)
shape <- .1
rate <- .1
x <- seq(.01,5,.01)
y <- dgamma(x, shape = shape, rate = rate)
plot(x,y)
shape <- .01
rate <- .01
x <- seq(.01,5,.01)
y <- dgamma(x, shape = shape, rate = rate)
plot(x,y)
shape <- .0001
rate <- .0001
x <- seq(.01,5,.01)
y <- dgamma(x, shape = shape, rate = rate)
plot(x,y)
shape <- 10
rate <- .1
x <- seq(.01,5,.01)
y <- dgamma(x, shape = shape, rate = rate)
plot(x,y)
shape <- 10
rate <- .1
x <- seq(.01,100,.01)
y <- dgamma(x, shape = shape, rate = rate)
plot(x,y)
